#!/usr/bin/env bash

# NOTE: convention: every command that dumps data to file (e.g. to be used with
# another command) adds a .tmp suffix. this way they can all be removed easily


# run bitcoin node
bitcoind


# run lightning nodes
run-lightningd 1
run-lightningd 2
run-lightningd 3


# get the nodes identity_pubkey
lcli-alice getinfo | jq -r ".id" > id.alice.tmp
lcli-bob getinfo | jq -r ".id" > id.bob.tmp
lcli-charlie getinfo | jq -r ".id" > id.charlie.tmp

ALICE_ID=$(cat id.alice.tmp)
BOB_ID=$(cat id.bob.tmp)
CHARLIE_ID=$(cat id.charlie.tmp)


# get addresses
lcli-alice newaddr | jq -r ".address" > address.alice.tmp
lcli-bob newaddr | jq -r ".address" > address.bob.tmp
lcli-charlie newaddr | jq -r ".address" > address.charlie.tmp

ALICE_ADDR=$(cat address.alice.tmp)
BOB_ADDR=$(cat address.bob.tmp)
CHARLIE_ADDR=$(cat address.charlie.tmp)


# funding
bitcoin-cli getnewaddress > address.main.tmp
ADDR_MAIN=$(cat address.main.tmp)
mine(){
    BLOCKS_TO_MINE=$1
    bitcoin-cli generatetoaddress $BLOCKS_TO_MINE $ADDR_MAIN
}
mine 400
bitcoin-cli sendmany "" "{\"${ALICE_ADDR}\":1,\"${BOB_ADDR}\":1,\"${CHARLIE_ADDR}\":1}" > initial.balance.txid.tmp
mine 1


# see the UTXOs of this wallet
lcli-alice listfunds
lcli-bob listfunds
lcli-charlie listfunds


# connect the nodes
lcli-alice connect $BOB_ID localhost:10002
lcli-charlie connect $BOB_ID localhost:10002


# open channels
lcli-alice fundchannel $BOB_ID 10000000 | jq -r ".txid" > alice-bob.funding.txid.tmp
mine 6 # mine 6 blocks so the channel is considered valid
lcli-bob fundchannel $CHARLIE_ID 10000000 | jq -r ".txid" > bob-charlie.funding.txid.tmp
mine 6


# list open channels
lcli-bob listchannels


# make payment
lcli-charlie invoice 1000000sat "label$(date +%s)" description | jq -r ".bolt11" > charlie.invoice.bolt11.tmp
lcli-alice decodepay $(cat charlie.invoice.bolt11.tmp)
lcli-alice pay $(cat charlie.invoice.bolt11.tmp)


# close channel
lcli-alice close $BOB_ID | jq -r ".txid" > alice-bob.closing.txid.tmp
mine 1





# close channel
# extract channel_point: unique channel identifier
lncli-alice listchannels | jq -r ".channels[0].channel_point" | cut -d':' -f1 > funding_txid.tmp
lncli-alice listchannels | jq -r ".channels[0].channel_point" | cut -d':' -f2 > output_idx.tmp
lncli-alice closechannel --funding_txid=$(cat funding_txid.tmp) --output_index=$(cat output_idx.tmp) > closing_txid.tmp
# mine a block with the closing transaction
btcctl --simnet --rpcuser=kek --rpcpass=kek generate 1
bitcoin-cli generatetoaddress 1 $(cat $LNPATH/dev/address.alice.tmp)

# check bob balance was updated on the blockchain
lncli-bob walletbalance


# get non-wallet transaction
gettransaction(){
    txid=$1
    bitcoin-cli getrawtransaction $txid > rawtransaction.tmp
    bitcoin-cli decoderawtransaction $(cat rawtransaction.tmp)
}
